{"ast":null,"code":"var _jsxFileName = \"/Users/plouka/Projects/slackr/frontend/src/components/Message/MessagePin.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport MdiIcon from '@mdi/react';\nimport { mdiPin, mdiPinOutline } from '@mdi/js';\nimport { IconButton } from '@material-ui/core';\nimport { withTheme } from '@material-ui/styles';\nimport AuthContext from '../../AuthContext';\nimport { StepContext } from '../Channel/ChannelMessages';\n\nfunction MessagePin({\n  message_id,\n  is_pinned = false,\n  theme\n}) {\n  const [isPinned, setIsPinned] = React.useState(is_pinned);\n  React.useEffect(() => setIsPinned(is_pinned), [is_pinned]);\n  const token = React.useContext(AuthContext);\n  let step = React.useContext(StepContext);\n  step = step ? step : () => {}; // sanity check\n\n  const toggle = () => {\n    if (isPinned) {\n      axios.post(`/message/unpin`, {\n        token,\n        message_id\n      }).then(() => {\n        step();\n      });\n    } else {\n      axios.post(`/message/pin`, {\n        token,\n        message_id\n      }).then(() => {\n        step();\n      });\n    } // Optimistic re-rendering\n    // setIsPinned(isPinned => !!!isPinned);\n\n  };\n\n  return React.createElement(IconButton, {\n    onClick: toggle,\n    style: {\n      margin: 1\n    },\n    size: \"small\",\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, isPinned ? React.createElement(MdiIcon, {\n    path: mdiPin,\n    size: \"1em\",\n    color: theme && theme.palette.action.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }) : React.createElement(MdiIcon, {\n    path: mdiPinOutline,\n    size: \"1em\",\n    color: theme && theme.palette.action.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}\n\nexport default withTheme(MessagePin);","map":{"version":3,"sources":["/Users/plouka/Projects/slackr/frontend/src/components/Message/MessagePin.js"],"names":["React","axios","MdiIcon","mdiPin","mdiPinOutline","IconButton","withTheme","AuthContext","StepContext","MessagePin","message_id","is_pinned","theme","isPinned","setIsPinned","useState","useEffect","token","useContext","step","toggle","post","then","margin","palette","action","active"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,SAAtC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAEA,SAASC,UAAT,CAAoB;AAClBC,EAAAA,UADkB;AAElBC,EAAAA,SAAS,GAAG,KAFM;AAGlBC,EAAAA;AAHkB,CAApB,EAIG;AAED,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACe,QAAN,CAAeJ,SAAf,CAAhC;AACAX,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAMF,WAAW,CAACH,SAAD,CAAjC,EAA6C,CAACA,SAAD,CAA7C;AAEA,QAAMM,KAAK,GAAGjB,KAAK,CAACkB,UAAN,CAAiBX,WAAjB,CAAd;AACA,MAAIY,IAAI,GAAGnB,KAAK,CAACkB,UAAN,CAAiBV,WAAjB,CAAX;AACAW,EAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAH,GAAU,MAAM,CAAE,CAA7B,CAPC,CAO8B;;AAE/B,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIP,QAAJ,EAAc;AACZZ,MAAAA,KAAK,CAACoB,IAAN,CAAY,gBAAZ,EAA6B;AAC3BJ,QAAAA,KAD2B;AAE3BP,QAAAA;AAF2B,OAA7B,EAICY,IAJD,CAIM,MAAM;AACVH,QAAAA,IAAI;AACL,OAND;AAOD,KARD,MAQO;AACLlB,MAAAA,KAAK,CAACoB,IAAN,CAAY,cAAZ,EAA2B;AACzBJ,QAAAA,KADyB;AAEzBP,QAAAA;AAFyB,OAA3B,EAICY,IAJD,CAIM,MAAM;AACVH,QAAAA,IAAI;AACL,OAND;AAOD,KAjBkB,CAkBnB;AACA;;AACD,GApBD;;AAsBA,SACE,oBAAC,UAAD;AACA,IAAA,OAAO,EAAEC,MADT;AAEA,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAFP;AAGA,IAAA,IAAI,EAAC,OAHL;AAIA,IAAA,IAAI,EAAC,KAJL;AAKA,kBAAW,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCV,QAAQ,GACL,oBAAC,OAAD;AACA,IAAA,IAAI,EAAEV,MADN;AAEA,IAAA,IAAI,EAAC,KAFL;AAGA,IAAA,KAAK,EAAES,KAAK,IAAIA,KAAK,CAACY,OAAN,CAAcC,MAAd,CAAqBC,MAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAOL,oBAAC,OAAD;AACA,IAAA,IAAI,EAAEtB,aADN;AAEA,IAAA,IAAI,EAAC,KAFL;AAGA,IAAA,KAAK,EAAEQ,KAAK,IAAIA,KAAK,CAACY,OAAN,CAAcC,MAAd,CAAqBC,MAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAuBD;;AAED,eAAepB,SAAS,CAACG,UAAD,CAAxB","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport MdiIcon from '@mdi/react';\nimport { mdiPin, mdiPinOutline } from '@mdi/js';\nimport { IconButton } from '@material-ui/core';\n\nimport { withTheme } from '@material-ui/styles';\n\nimport AuthContext from '../../AuthContext';\nimport {StepContext} from '../Channel/ChannelMessages';\n\nfunction MessagePin({\n  message_id,\n  is_pinned = false,\n  theme,\n}) {\n\n  const [isPinned, setIsPinned] = React.useState(is_pinned);\n  React.useEffect(() => setIsPinned(is_pinned),[is_pinned]);\n\n  const token = React.useContext(AuthContext);\n  let step = React.useContext(StepContext);\n  step = step ? step : () => {}; // sanity check\n\n  const toggle = () => {\n    if (isPinned) {\n      axios.post(`/message/unpin`, {\n        token,\n        message_id,\n      })\n      .then(() => {\n        step();\n      });\n    } else {\n      axios.post(`/message/pin`, {\n        token,\n        message_id,\n      })\n      .then(() => {\n        step();\n      });\n    }\n    // Optimistic re-rendering\n    // setIsPinned(isPinned => !!!isPinned);\n  };\n\n  return (\n    <IconButton\n    onClick={toggle}\n    style={{ margin: 1 }}\n    size=\"small\"\n    edge=\"end\"\n    aria-label=\"delete\"\n    >\n    {isPinned ? (\n        <MdiIcon\n        path={mdiPin}\n        size=\"1em\"\n        color={theme && theme.palette.action.active}\n        />\n    ) : (\n        <MdiIcon\n        path={mdiPinOutline}\n        size=\"1em\"\n        color={theme && theme.palette.action.active}\n        />\n    )}\n    </IconButton>\n  );\n}\n\nexport default withTheme(MessagePin);\n"]},"metadata":{},"sourceType":"module"}