{"ast":null,"code":"var _jsxFileName = \"/Users/plouka/Projects/slackr/frontend/src/components/Profile/index.js\";\nimport { List, ListItem, ListSubheader, TextField, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport AuthContext from '../../AuthContext';\nimport { extractUId } from '../../utils/token';\nimport EditableFields from './EditableFields';\n\nfunction Profile({\n  profile\n}) {\n  const [profileDetails, setProfileDetails] = React.useState({});\n  const token = React.useContext(AuthContext);\n  const u_id = extractUId(token);\n  React.useEffect(() => {\n    axios.get(`/user/profile`, {\n      params: {\n        token,\n        u_id: profile\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(data);\n      const {\n        user\n      } = data;\n      setProfileDetails(user);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [profile, token]);\n\n  function updateName(name_last, name_first) {\n    axios.put(`/user/profile/setname`, {\n      token,\n      name_first,\n      name_last\n    }).then(() => {\n      console.log('all good');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function updateEmail(email) {\n    axios.put(`/user/profile/setemail`, {\n      token,\n      email\n    }).then(() => {\n      console.log('all good');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function updateProfileImgUrl(raw_text, x_start, y_start, x_end, y_end) {\n    const items = raw_text.split(',');\n    axios.post(`/user/profile/uploadphoto`, {\n      token,\n      img_url: items[0],\n      x_start: items[1],\n      y_start: items[2],\n      x_end: items[3],\n      y_end: items[4]\n    }).then(() => {\n      console.log('all good');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function updateHandle(handle_str) {\n    axios.put(`/user/profile/sethandle`, {\n      token,\n      handle_str\n    }).then(() => {\n      console.log('all good');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  const editable = u_id.toString() === profile;\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(List, {\n    subheader: React.createElement(ListSubheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Profile Details\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    key: 'name',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(EditableFields, {\n    editable: editable,\n    masterValue: profileDetails.name_last,\n    slaveValues: [profileDetails.name_first],\n    master: passed_props => React.createElement(TextField, Object.assign({\n      label: 'Last Name'\n    }, passed_props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })),\n    slaves: [passed_props => React.createElement(TextField, Object.assign({\n      label: 'First Name'\n    }, passed_props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))],\n    onSave: updateName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: 'email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(EditableFields, {\n    editable: editable,\n    masterValue: profileDetails.email,\n    master: passed_props => React.createElement(TextField, Object.assign({\n      label: 'Email'\n    }, passed_props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })),\n    onSave: updateEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: 'handle',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(EditableFields, {\n    editable: editable,\n    masterValue: profileDetails.handle_str,\n    master: passed_props => React.createElement(TextField, Object.assign({\n      label: 'Handle'\n    }, passed_props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })),\n    onSave: updateHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    key: 'img_url',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(EditableFields, {\n    editable: editable,\n    masterValue: profileDetails.profile_img_url,\n    master: passed_props => React.createElement(TextField, Object.assign({\n      label: 'img_url,x1,y1,x2,y2'\n    }, passed_props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })),\n    onSave: updateProfileImgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"NOTE: The final field input is to set a profile image. Please enter the 5 components (image url, x_start, y_start, x_end, y_end) separated by commas\")));\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/plouka/Projects/slackr/frontend/src/components/Profile/index.js"],"names":["List","ListItem","ListSubheader","TextField","Typography","axios","React","AuthContext","extractUId","EditableFields","Profile","profile","profileDetails","setProfileDetails","useState","token","useContext","u_id","useEffect","get","params","then","data","console","log","user","catch","err","error","updateName","name_last","name_first","put","updateEmail","email","updateProfileImgUrl","raw_text","x_start","y_start","x_end","y_end","items","split","post","img_url","updateHandle","handle_str","editable","toString","passed_props","profile_img_url"],"mappings":"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","sourcesContent":["import {\n  List,\n  ListItem,\n  ListSubheader,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport AuthContext from '../../AuthContext';\nimport { extractUId } from '../../utils/token';\nimport EditableFields from './EditableFields';\n\nfunction Profile({ profile }) {\n\n  const [profileDetails, setProfileDetails] = React.useState({});\n  const token = React.useContext(AuthContext);\n  const u_id = extractUId(token);\n\n  React.useEffect(() => {\n    axios\n      .get(`/user/profile`, { params: { token, u_id: profile } })\n      .then(({ data }) => {\n        console.log(data);\n        const { user } = data;\n        setProfileDetails(user);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [profile, token]);\n\n  function updateName(name_last, name_first) {\n    axios\n      .put(`/user/profile/setname`, { token, name_first, name_last })\n      .then(() => {\n        console.log('all good');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function updateEmail(email) {\n    axios\n      .put(`/user/profile/setemail`, { token, email })\n      .then(() => {\n        console.log('all good');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function updateProfileImgUrl(raw_text, x_start, y_start, x_end, y_end) {\n    const items = raw_text.split(',');\n    axios\n      .post(`/user/profile/uploadphoto`, { token,\n        img_url: items[0],\n        x_start: items[1],\n        y_start: items[2],\n        x_end: items[3],\n        y_end: items[4],\n      })\n      .then(() => {\n        console.log('all good');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  function updateHandle(handle_str) {\n    axios\n      .put(`/user/profile/sethandle`, { token, handle_str })\n      .then(() => {\n        console.log('all good');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  const editable = u_id.toString() === profile;\n\n  return (\n    <>\n      <Typography variant=\"h4\">Profile</Typography>     \n      <List subheader={<ListSubheader>Profile Details</ListSubheader>}>\n        <ListItem key={'name'}>\n          <EditableFields\n            editable={editable}\n            masterValue={profileDetails.name_last}\n            slaveValues={[profileDetails.name_first]}\n            master={(passed_props) => (\n              <TextField label={'Last Name'} {...passed_props} />\n            )}\n            slaves={[\n              (passed_props) => (\n                <TextField label={'First Name'} {...passed_props} />\n              ),\n            ]}\n            onSave={updateName}\n          />\n        </ListItem>\n        <ListItem key={'email'}>\n          <EditableFields\n            editable={editable}\n            masterValue={profileDetails.email}\n            master={(passed_props) => (\n              <TextField label={'Email'} {...passed_props} />\n            )}\n            onSave={updateEmail}\n          />\n        </ListItem>\n        <ListItem key={'handle'}>\n          <EditableFields\n            editable={editable}\n            masterValue={profileDetails.handle_str}\n            master={(passed_props) => (\n              <TextField label={'Handle'} {...passed_props} />\n            )}\n            onSave={updateHandle}\n          />\n        </ListItem>\n        <ListItem key={'img_url'}>\n          <EditableFields\n            editable={editable}\n            masterValue={profileDetails.profile_img_url}\n            master={(passed_props) => (\n              <TextField label={'img_url,x1,y1,x2,y2'} {...passed_props} />\n            )}\n            onSave={updateProfileImgUrl}\n          />\n        </ListItem>\n        <br />\n        <div>NOTE: The final field input is to set a profile image. Please enter the 5 components (image url, x_start, y_start, x_end, y_end) separated by commas</div>\n      </List>\n    </>\n  );\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}