{"ast":null,"code":"var _jsxFileName = \"/Users/plouka/Projects/slackr/frontend/src/components/Message/index.js\";\nimport React from 'react';\nimport timeago from 'epoch-timeago';\nimport axios from 'axios';\nimport { Avatar, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport AuthContext from '../../AuthContext';\nimport MessagePin from './MessagePin';\nimport MessageReact from './MessageReact';\nimport MessageRemove from './MessageRemove';\nimport MessageEdit from './MessageEdit';\nimport { isMatchingId } from '../../utils';\nimport { extractUId } from '../../utils/token';\n\nfunction Message({\n  message_id,\n  message = '',\n  u_id,\n  time_created,\n  is_unread = false,\n  is_pinned = false,\n  reacts = []\n  /* [{ react_id, u_ids }] */\n\n}) {\n  const [name, setName] = React.useState(\"\");\n  const [imgUrl, setImgUrl] = React.useState();\n  const token = React.useContext(AuthContext);\n  const isUser = isMatchingId(u_id, extractUId(token));\n\n  const msgToList = msg => msg.split(\"\\n\");\n\n  React.useEffect(() => {\n    setName();\n    setImgUrl();\n    axios.get(`/user/profile`, {\n      params: {\n        token,\n        u_id\n      }\n    }).then(({\n      data\n    }) => {\n      const {\n        user: {\n          email = '',\n          name_first = '',\n          name_last = '',\n          handle_str = '',\n          profile_img_url = ''\n        }\n      } = data;\n      setName(`${name_first} ${name_last}`);\n      setImgUrl(`${profile_img_url}`);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [message_id, token, u_id]);\n  return React.createElement(ListItem, {\n    key: message_id,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, message && React.createElement(React.Fragment, null, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-small\",\n    src: imgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, name), React.createElement(\"span\", {\n      style: {\n        paddingLeft: 10,\n        fontSize: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, timeago(time_created * 1000))),\n    secondary: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      style: {\n        fontFamily: 'inherit'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, message)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      height: 30,\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(MessageReact, {\n    message_id: message_id,\n    reacts: reacts,\n    u_id: u_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(MessagePin, {\n    message_id: message_id,\n    is_pinned: is_pinned,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(MessageEdit, {\n    message_id: message_id // disabled={!isUser} /* We have no way of checking admin status */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(MessageRemove, {\n    message_id: message_id // disabled={!isUser} /* We have no way of checking admin status */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))));\n}\n\nexport default Message;","map":{"version":3,"sources":["/Users/plouka/Projects/slackr/frontend/src/components/Message/index.js"],"names":["React","timeago","axios","Avatar","ListItem","ListItemIcon","ListItemText","AuthContext","MessagePin","MessageReact","MessageRemove","MessageEdit","isMatchingId","extractUId","Message","message_id","message","u_id","time_created","is_unread","is_pinned","reacts","name","setName","useState","imgUrl","setImgUrl","token","useContext","isUser","msgToList","msg","split","useEffect","get","params","then","data","user","email","name_first","name_last","handle_str","profile_img_url","catch","err","console","error","width","display","justifyContent","alignItems","paddingLeft","fontSize","fontFamily","height","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport timeago from 'epoch-timeago';\nimport axios from 'axios';\n\nimport {\n  Avatar,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\n\nimport AuthContext from '../../AuthContext';\nimport MessagePin from './MessagePin';\nimport MessageReact from './MessageReact';\nimport MessageRemove from './MessageRemove';\nimport MessageEdit from './MessageEdit';\n\nimport {isMatchingId} from '../../utils';\nimport {extractUId} from '../../utils/token';\n\nfunction Message({\n  message_id,\n  message = '',\n  u_id,\n  time_created,\n  is_unread = false,\n  is_pinned = false,\n  reacts = [] /* [{ react_id, u_ids }] */,\n}) {\n\n  const [name, setName] = React.useState(\"\");\n  const [imgUrl, setImgUrl] = React.useState();\n  const token = React.useContext(AuthContext);\n  const isUser = isMatchingId(u_id, extractUId(token));\n\n  const msgToList = msg => msg.split(\"\\n\");\n\n  React.useEffect(() => {\n    setName();\n    setImgUrl()\n    axios\n      .get(`/user/profile`, {\n        params: {\n          token,\n          u_id,\n        },\n      })\n      .then(({ data }) => {\n        const {\n          user: {\n            email = '',\n            name_first = '',\n            name_last = '',\n            handle_str = '',\n            profile_img_url = '',\n          },\n        } = data;\n        setName(`${name_first} ${name_last}`);\n        setImgUrl(`${profile_img_url}`);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [message_id, token, u_id]);\n\n  return (\n    <ListItem key={message_id} style={{ width: '100%' }}>\n      {message && (\n        <>\n          <ListItemIcon>\n            <img className=\"avatar-small\" src={imgUrl} />\n          </ListItemIcon>\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <ListItemText\n              primary={\n                <>\n                  <span>{name}</span>\n                  <span style={{ paddingLeft: 10, fontSize: 10 }}>\n                    {timeago(time_created * 1000)}\n                  </span>\n                </>\n              }\n              secondary={\n                <div>\n                  <pre style={{ fontFamily: 'inherit' }}>{message}</pre>\n                </div>\n              }\n            />\n            <div style={{ display: 'flex', height: 30, marginLeft: 20 }}>\n              <MessageReact\n                message_id={message_id}\n                reacts={reacts}\n                u_id={u_id}\n              />\n              <MessagePin\n                message_id={message_id}\n                is_pinned={is_pinned}\n              />\n              <MessageEdit\n                message_id={message_id}\n                // disabled={!isUser} /* We have no way of checking admin status */\n              />\n              <MessageRemove\n                message_id={message_id}\n                // disabled={!isUser} /* We have no way of checking admin status */\n              />\n            </div>\n          </div>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}