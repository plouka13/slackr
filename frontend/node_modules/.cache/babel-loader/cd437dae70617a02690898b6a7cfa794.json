{"ast":null,"code":"var _jsxFileName = \"/Users/plouka/Projects/slackr/frontend/src/components/Channel/AddChannelDialog.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, IconButton, Button, Switch, TextField, Grid, FormControlLabel, FormLabel } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Add from \"@material-ui/icons/Add\";\nimport AuthContext from \"../../AuthContext\";\n\nfunction AddChannelDialog({ ...props\n}) {\n  const [open, setOpen] = React.useState(false);\n  const token = React.useContext(AuthContext);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const name = event.target[0].value;\n    const secret = event.target[1].checked;\n    const is_public = !secret;\n    if (!name) return;\n    axios.post(`/channels/create`, {\n      token,\n      name,\n      is_public\n    }).then(response => {\n      console.log(response);\n      props.callback();\n    }).catch(err => {});\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    size: \"small\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Add, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Create Channel\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Complete the form below to create a new channel\"), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"channel_name\",\n    label: \"Channel Name\",\n    name: \"channel_name\",\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    item: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Visibility, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      value: \"secret\",\n      inputProps: {\n        \"aria-label\": \"Secret\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }),\n    label: \"Secret\",\n    labelPlacement: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(VisibilityOff, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleClose,\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Create\")))));\n}\n\nexport default AddChannelDialog;","map":{"version":3,"sources":["/Users/plouka/Projects/slackr/frontend/src/components/Channel/AddChannelDialog.js"],"names":["React","axios","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","IconButton","Button","Switch","TextField","Grid","FormControlLabel","FormLabel","Visibility","VisibilityOff","Add","AuthContext","AddChannelDialog","props","open","setOpen","useState","token","useContext","handleClickOpen","handleClose","handleSubmit","event","preventDefault","name","target","value","secret","checked","is_public","post","then","response","console","log","callback","catch","err"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  IconButton,\n  Button,\n  Switch,\n  TextField,\n  Grid,\n  FormControlLabel,\n  FormLabel\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Add from \"@material-ui/icons/Add\";\nimport AuthContext from \"../../AuthContext\";\n\nfunction AddChannelDialog({ ...props }) {\n  const [open, setOpen] = React.useState(false);\n  const token = React.useContext(AuthContext);\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    const name = event.target[0].value;\n    const secret = event.target[1].checked;\n    const is_public = !secret;\n\n    if (!name) return;\n\n    axios\n      .post(`/channels/create`, { token, name, is_public })\n      .then(response => {\n        console.log(response);\n        props.callback();\n      })\n      .catch(err => {});\n  }\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={handleClickOpen}>\n        <Add />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Channel</DialogTitle>\n        <form onSubmit={handleSubmit}>\n          <DialogContent>\n            <DialogContentText>\n              Complete the form below to create a new channel\n            </DialogContentText>\n            <Grid\n              container\n              spacing={2}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={12}>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"channel_name\"\n                  label=\"Channel Name\"\n                  name=\"channel_name\"\n                  fullWidth\n                />\n              </Grid>\n              <Grid container item justify=\"center\" alignItems=\"center\">\n                <Visibility />\n                <FormControlLabel\n                  control={\n                    <Switch\n                      value=\"secret\"\n                      inputProps={{ \"aria-label\": \"Secret\" }}\n                    />\n                  }\n                  label=\"Secret\"\n                  labelPlacement=\"top\"\n                />\n                <VisibilityOff />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleClose} type=\"submit\" color=\"primary\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AddChannelDialog;\n"]},"metadata":{},"sourceType":"module"}