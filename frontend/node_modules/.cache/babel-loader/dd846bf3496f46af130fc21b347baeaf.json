{"ast":null,"code":"var _jsxFileName = \"/Users/plouka/Projects/slackr/frontend/src/pages/ResetPasswordPage.js\";\nimport axios from 'axios';\nimport { Avatar, Box, Button, Container, Grid, Link, makeStyles, TextField, Typography } from '@material-ui/core';\nimport DeveloperOutlinedIcon from '@material-ui/icons/DeveloperModeOutlined';\nimport React from 'react';\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.primary.light\n    }\n  },\n  card: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nfunction ForgotPasswordPage(props) {\n  function handleSubmit(event) {\n    event.preventDefault(); // Get user inputs (TODO:)\n\n    const reset_code = event.target[0].value;\n    const new_password = event.target[2].value; // Quick validation\n\n    if (!reset_code || !new_password) return; // Send to backend\n\n    axios.post(`/auth/passwordreset/reset`, {\n      reset_code,\n      new_password\n    }).then(response => {\n      console.log(response);\n      props.history.push('/login');\n    }).catch(err => {});\n  }\n\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Box, {\n    boxShadow: 3,\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(DeveloperOutlinedIcon, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Reset Password\"), React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"reset_code\",\n    label: \"Reset code\",\n    name: \"reset_code\",\n    type: \"text\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"new_password\",\n    label: \"New Password\",\n    name: \"new_password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Change Password\"), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Link, {\n    href: \"/login\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, 'Remember your password? Login'))))));\n}\n\nexport default ForgotPasswordPage;","map":{"version":3,"sources":["/Users/plouka/Projects/slackr/frontend/src/pages/ResetPasswordPage.js"],"names":["axios","Avatar","Box","Button","Container","Grid","Link","makeStyles","TextField","Typography","DeveloperOutlinedIcon","React","useStyles","theme","body","backgroundColor","palette","primary","light","card","background","paper","marginTop","spacing","padding","display","flexDirection","alignItems","borderRadius","shape","ForgotPasswordPage","props","handleSubmit","event","preventDefault","reset_code","target","value","new_password","post","then","response","console","log","history","push","catch","err","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,UAPF,EAQEC,SARF,EASEC,UATF,QAUO,mBAVP;AAWA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvC,aAAW;AACTC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC;AADnC;AADG,GAD4B;AAMvCC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcI,UAAd,CAAyBC,KADtC;AAEJC,IAAAA,SAAS,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,CAFP;AAGJC,IAAAA,OAAO,EAAEX,KAAK,CAACU,OAAN,CAAc,CAAd,CAHL;AAIJE,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,aAAa,EAAE,QALX;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJC,IAAAA,YAAY,EAAEf,KAAK,CAACgB,KAAN,CAAYD;AAPtB;AANiC,CAAZ,CAAD,CAA5B;;AAiBA,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN,GAD2B,CAG3B;;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAAnC;AACA,UAAMC,YAAY,GAAGL,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAArC,CAL2B,CAO3B;;AACA,QAAI,CAACF,UAAD,IAAe,CAACG,YAApB,EAAkC,OARP,CAU3B;;AACAtC,IAAAA,KAAK,CAACuC,IAAN,CAAY,2BAAZ,EAAwC;AAAEJ,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAxC,EACGE,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAV,MAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS,CAAE,CALpB;AAMD;;AAED,QAAMC,OAAO,GAAGpC,SAAS,EAAzB;AAEA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAEoC,OAAO,CAAC7B,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAOE;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEa,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,YALL;AAME,IAAA,KAAK,EAAC,YANR;AAOE,IAAA,IAAI,EAAC,YAPP;AAQE,IAAA,IAAI,EAAC,MARP;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,cALL;AAME,IAAA,KAAK,EAAC,cANR;AAOE,IAAA,IAAI,EAAC,cAPP;AAQE,IAAA,IAAI,EAAC,UARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAsBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,MAA/B;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtBF,EAyBE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,+BADH,CAFF,CADF,CAzBF,CAPF,CADF,CADF;AA8CD;;AAED,eAAeF,kBAAf","sourcesContent":["import axios from 'axios';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport DeveloperOutlinedIcon from '@material-ui/icons/DeveloperModeOutlined';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  card: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: theme.shape.borderRadius,\n  },\n}));\n\nfunction ForgotPasswordPage(props) {\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    // Get user inputs (TODO:)\n    const reset_code = event.target[0].value;\n    const new_password = event.target[2].value;\n\n    // Quick validation\n    if (!reset_code || !new_password) return;\n\n    // Send to backend\n    axios.post(`/auth/passwordreset/reset`, { reset_code, new_password })\n      .then((response) => {\n        console.log(response);\n        props.history.push('/login');\n      })\n      .catch((err) => {});\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\">\n      <Box boxShadow={3} className={classes.card}>\n        <Avatar>\n          <DeveloperOutlinedIcon color=\"secondary\" />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reset Password\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"reset_code\"\n            label=\"Reset code\"\n            name=\"reset_code\"\n            type=\"text\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"new_password\"\n            label=\"New Password\"\n            name=\"new_password\"\n            type=\"password\"\n          />\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n            Change Password\n          </Button>\n          <Grid container>\n            <Grid item>\n              <br />\n              <Link href=\"/login\" variant=\"body1\">\n                {'Remember your password? Login'}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default ForgotPasswordPage;\n"]},"metadata":{},"sourceType":"module"}